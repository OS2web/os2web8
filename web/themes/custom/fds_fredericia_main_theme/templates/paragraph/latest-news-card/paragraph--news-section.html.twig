<div class="latest-news-display">
  <div class="container">
    <div class="news-title-wrapper">
      <h2>Nyheder</h2>
      <div class="see-all-news-btn">
        <a href="/nyheder">Se flere nyheder</a>
      </div>
    </div>
    <div class="latest-news-innerwrapper swiper-container-news-section">
      <div class="swiper-wrapper">
        {# Display manually selected news articles #}
        {% for item in paragraph.field_news_manual_ref %}
          {% set node = item.entity %}
          {% if node %}
          <div class="news-card swiper-slide">
        <a href="{{ path('entity.node.canonical', {'node': node.id()}) }}" class="news-image-wrapper">
          {% set primaryImage = node.field_os2web_news_primaryimage.entity %}
          {% set mediaImage = node.field_os2web_news_media_img.entity %}
          {% set placeholder_image_url = placeholder_images_urls[loop.index0 % placeholder_images_urls|length] %}

          {# Check for primary image #}
          {% if primaryImage.fileuri %}
            <img src="{{ file_url(primaryImage.fileuri) }}" alt="{{ primaryImage.alt }}">
          {% elseif mediaImage and mediaImage.field_media_image.entity %}
              <img src="{{ file_url(mediaImage.field_media_image.entity.fileuri) }}" alt="{{ mediaImage.field_media_image.entity.alt }}">
            {% else %}
              <img src="{{ placeholder_image_url }}" alt="Default placeholder image">
          {% endif %}
            </a>
            <div class="news-content-wrapper">
              <span class="news-date">{{ node.field_os2web_news_article_date.value | date('d/m/Y') }}</span>
              <a class="news-heading-link" href="{{ path('entity.node.canonical', {'node': node.id()}) }}">
                <h3 class="news-heading">{{ node.field_os2web_news_heading.value }}</h3>
              </a>
              <p class="news-intro">
                {{ node.field_os2web_news_intro.value }}
              </p>
              <a class="news-readmore" href="{{ path('entity.node.canonical', {'node': node.id()}) }}">Læs mere<svg class="arrow-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                  <g fill="none" stroke="#fff" stroke-width="1.5" stroke-linejoin="round" stroke-miterlimit="10">
                    <circle class="arrow-icon--circle" cx="16" cy="16" r="15.12"></circle>
                    <path class="arrow-icon--arrow" d="M16.14 9.93L22.21 16l-6.07 6.07M8.23 16h13.98"></path>
                  </g>
                </svg></a>
            </div>
            </div>
           {% endif %}
          {% endfor %}

        {# Display dynamically loaded news articles based on taxonomy #}
        {% for node in latest_news_articles %}
          <div class="news-card swiper-slide">
            <a href="{{ path('entity.node.canonical', {'node': node.id()}) }}" class="news-image-wrapper">
              {% set primaryImage = node.field_os2web_news_primaryimage.entity %}
              {% set mediaImage = node.field_os2web_news_media_img.entity %}
              {% set placeholder_image_url = placeholder_images_urls[loop.index0 % placeholder_images_urls|length] %}

              {# Check for primary image #}
              {% if primaryImage.fileuri %}
                <img src="{{ file_url(primaryImage.fileuri) }}" alt="{{ primaryImage.alt }}">
              {% elseif mediaImage and mediaImage.field_media_image.entity %}
                <img src="{{ file_url(mediaImage.field_media_image.entity.fileuri) }}" alt="{{ mediaImage.field_media_image.entity.alt }}">
                {% else %}
                  {# If no media image, use placeholder #}
                  <img src="{{ placeholder_image_url }}" alt="Default placeholder image">
              {% endif %}
            </a>
            <div class="news-content-wrapper">
              <span class="news-date">{{ node.field_os2web_news_article_date.value | date('d/m/Y') }}</span>
              <a class="news-heading-link" href="{{ path('entity.node.canonical', {'node': node.id()}) }}">
                <h3 class="news-heading">{{ node.field_os2web_news_heading.value }}</h3>
              </a>

              <p class="news-intro">
                {{ node.field_os2web_news_intro.value }}
              </p>
              <a class="news-readmore" href="{{ path('entity.node.canonical', {'node': node.id()}) }}">Læs mere<svg class="arrow-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                  <g fill="none" stroke="#fff" stroke-width="1.5" stroke-linejoin="round" stroke-miterlimit="10">
                    <circle class="arrow-icon--circle" cx="16" cy="16" r="15.12"></circle>
                    <path class="arrow-icon--arrow" d="M16.14 9.93L22.21 16l-6.07 6.07M8.23 16h13.98"></path>
                  </g>
                </svg></a>
            </div>
          </div>
        {% endfor %}
      </div>
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const swiper = new Swiper('.swiper-container-news-section', {
      // Optional parameters
      slidesPerView: 1,
      spaceBetween: 10,
      // Responsive breakpoints
      breakpoints: {
        992: {
          slidesPerView: 3,
          spaceBetween: 35
        }
      },
      // Navigation arrows
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
    });


    // Find all news heading links and read more links
    const headingLinks = document.querySelectorAll('.news-heading-link');
    const readMoreLinks = document.querySelectorAll('.news-readmore');

    const handleHover = (event, entering) => {
      // Find the closest news-card parent
      const newsCard = event.target.closest('.news-card');
      if (!newsCard) return;

      // Find the image inside this news-card
      const img = newsCard.querySelector('.news-image-wrapper img');
      if (!img) return;

      // Add or remove the hover class based on entering or leaving
      if (entering) {
        img.classList.add('hover-effect');
      } else {
        img.classList.remove('hover-effect');
      }
    };

    // Add event listeners for both mouseenter and mouseleave
    headingLinks.forEach(link => {
      link.addEventListener('mouseenter', (event) => handleHover(event, true));
      link.addEventListener('mouseleave', (event) => handleHover(event, false));
    });

    readMoreLinks.forEach(link => {
      link.addEventListener('mouseenter', (event) => handleHover(event, true));
      link.addEventListener('mouseleave', (event) => handleHover(event, false));
    });
  });
</script>
