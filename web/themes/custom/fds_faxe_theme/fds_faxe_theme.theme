<?php

use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;


/**
 * Implements hook_preprocess_block().
 */
function fds_faxe_theme_preprocess_block(&$variables) {
  if ($variables['elements']['#id']  == 'fds_faxe_theme_indholdfield') {
    $node = $variables['content']['field']['#object'];
    $ext_links =  $node->get('field_ext_links')->getValue();
    foreach( $ext_links as $ext_link) {
      $url = Url::fromUri($ext_link['uri']);
      $link = new Link($ext_link['title'], $url);
      $variables['content']['field'][] = $link->toRenderable();
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function fds_faxe_theme_preprocess_page(array &$variables) {
  $variables['theme_settings'] = _fds_base_theme_collect_theme_settings();
  $variables['theme_settings']['footer']['footer_show_latest_content'] = theme_get_setting('footer_show_latest_content');
  $variables['theme_settings']['branding']['branding_toggle'] = theme_get_setting('branding_toggle');
  $variables['theme_settings']['branding']['branding_text'] = theme_get_setting('branding_text');
}

/**
 * Implements hook_form_search_block_form_alter().
 */
function fds_faxe_theme_form_search_block_form_alter(&$form, FormStateInterface $form_state) {
  $form['keys']['#attributes']['placeholder'] = t('Hvad søger du?');
}

/**
 * Implements hook_form_search_form_alter().
 */
function fds_faxe_theme_form_search_form_alter(&$form, FormStateInterface $form_state) {
  $form['basic']['label'] = [
    '#type' => 'container',
    '#attributes' => [
      'class' => ['search-form-label'],
    ],
    'markup' => ['#markup' => $form['basic']['keys']['#title']->render()],
  ];
  $form['basic']['keys']['#title'] = '';
  $form['basic']['#attributes'] = [];
  $form['basic']['search-line'] = [
    '#type' => 'container',
    '#attributes' => [
      'class' => ['container-inline'],
    ],
    'keys' => $form['basic']['keys'],
    'submit' => $form['basic']['submit'],
  ];

  unset($form['basic']['keys']);
  unset($form['basic']['submit']);
}

/**
 * Implements template_preprocess_swiftmailer().
 */
function fds_faxe_theme_preprocess_swiftmailer(&$variables) {
  global $base_url;
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $theme = \Drupal::theme()->getActiveTheme();
  $theme_path = $base_url . '/' . $theme->getPath();

  // Theme settings.
  $theme_settings = _fds_base_theme_collect_theme_settings();
  $variables['current_language'] = $language;
  $variables['base_url'] = $GLOBALS['base_url'] . '/';
  $variables['logo_url'] = $theme_path . '/dist/images/logo--mail.png';
  $variables['theme_settings'] = $theme_settings;

  // Header logo.
  if (!empty($theme_settings['language_logo']['header_logo__' . $language])) {
    $file = File::load($theme_settings['language_logo']['header_logo__' . $language]);
    if (!empty($file)) {
      $variables['logo_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function fds_faxe_theme_preprocess_anonymous_subscriptions_message(array &$variables) {

  global $base_url;
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $theme = \Drupal::theme()->getActiveTheme();
  $theme_path = $base_url . '/' . $theme->getPath();
  $variables['logo_url'] = $theme_path . '/dist/images/logo--mail.png';
  $variables['base_url'] = $GLOBALS['base_url'] . '/';

  if (!empty($theme_settings['language_logo']['header_logo__' . $language])) {
    $file = File::load($theme_settings['language_logo']['header_logo__' . $language]);
    if (!empty($file)) {
      $variables['logo_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
    }
  }

  $subscription = $variables['subscription'];
  if (!empty($subscription->type->value) && $subscription->type->value == 'os2web_hearings_hearing_case') {
    $variables['link'] = Link::fromTextAndUrl(t('Klik her for at gå til høringer og afgørelser'), Url::fromUserInput('/hoeringer-og-afgoerelser'));
  }


}

/**
 * Implements hook_preprocess_term().
 */
function fds_faxe_theme_preprocess_taxonomy_term(array &$variables) {
  /** @var \Drupal\taxonomy\TermInterface $term */
  $term = $variables['term'];

  if ($variables['view_mode'] == 'full' && $term->bundle() == 'os2web_sektion') {
    // Get all pages that are using this section and are promoted.
    $entity_ids = getSectionPromotedNodes($term->id());
    if (empty($entity_ids)) {
      return;
    }

    $nodes = Node::loadMultiple($entity_ids);
    $promoted_node_links = [];

    /** @var \Drupal\node\NodeInterface $node */
    foreach ($nodes as $node) {
      $promoted_node_links[] = [
        'title' => $node->label(),
        'url' => $node->toUrl(),
      ];
    }

    $variables['#promoted_node_links'] = $promoted_node_links;
  }

  // Background color
  if ($term->field_os2web_color && $term->field_os2web_color->value) {
    $variables['background_color'] = $term->field_os2web_color->value;
  }
}

/**
 * Implements hook_preprocess_node().
 */
function fds_faxe_theme_preprocess_node(array &$variables) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];

  if ($variables['view_mode'] == 'search_result' && $node->getType() == 'os2web_page') {
    $sectionLabels = [];
    if ($section_id = $node->field_os2web_page_section->target_id) {
      $parents = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadAllParents($section_id);

      foreach ($parents as $parent) {
        $sectionLabels[] = $parent->label();
      }

      $variables['#section_labels'] = array_reverse($sectionLabels);
    }
  }
  if ($variables['view_mode'] == 'full' && $node->getType() == 'os2web_event') {
    $startDateAttr = $variables['content']['field_os2web_event_start_date'][0]['#attributes']['datetime'];
    $endDateAttr = $variables['content']['field_os2web_event_end_date'][0]['#attributes']['datetime'];
    $endDateText = $variables['content']['field_os2web_event_end_date'][0]['#text'];
    if(substr($startDateAttr, 0 , 11) == substr($endDateAttr, 0 , 11)) {
      $newEndDate = substr($endDateText, -5);
      $variables['content']['field_os2web_event_end_date'][0]['#text'] = 'til ' . $newEndDate;
    }
  }
}

/**
 * Implements hook_preprocess_media().
 */
function fds_faxe_theme_preprocess_media(array &$variables) {
  $media = $variables['media'];
  $name = $media->getName();
  if (!empty($name)) {
    $mediaArray = $media->toArray();
    if (!empty($mediaArray['field_media_file'][0]['target_id'])) {
      $fileId = $mediaArray['field_media_file'][0]['target_id'];
      $file = \Drupal\file\Entity\File::load($fileId);
      $file->setFilename($name);
    }
  }
}



function node2box(&$node, $showImages, $incPromoted) {

  $refNode = new stdClass();
  $refNode->title = (string) $node->field_os2web_page_heading->value;
  $refNode->url = $node->toUrl()->toString();
  $refNode->image = null;
  $refNode->children = array();

  if ($showImages) {
    if ($node->hasField('field_os2web_page_primaryicon')
      && $node->field_os2web_page_primaryicon instanceof EntityReferenceFieldItemListInterface
      && $node->field_os2web_page_primaryicon->referencedEntities()) {

      $refNode->image = $node->field_os2web_page_primaryicon->view([
        'label' => 'hidden',
        'type' => 'image',
        'settings' => [
          'image_style' => 'thumbnail'
        ],
      ]);
    }
    elseif ($node->hasField('field_os2web_page_primaryimage')
      && $node->field_os2web_page_primaryimage instanceof EntityReferenceFieldItemListInterface
      && $node->field_os2web_page_primaryimage->referencedEntities()) {

      $refNode->image = $node->field_os2web_page_primaryimage->view([
        'label' => 'hidden',
        'type' => 'image',
        'settings' => [
          'image_style' => 'os2web_normal'
        ],
      ]);
    }
    elseif ($node->hasField('field_os2web_page_paragraph_bann')
      && $node->field_os2web_page_paragraph_bann instanceof EntityReferenceFieldItemListInterface
      && ($bannerParagraph = $node->field_os2web_page_paragraph_bann->referencedEntities())) {
      $paragraph = $bannerParagraph[0];
      $refNode->image = $paragraph->field_os2web_banner_image->view([
        'label' => 'hidden',
        'type' => 'image',
        'settings' => [
          'image_style' => 'paragraph_background_image_thumb'
        ]
      ]);
    }
  }

  $menu_link_root_entities = \Drupal::entityTypeManager()
    ->getStorage('menu_link_content')
    ->loadByProperties([
      'link' => ['uri' => 'entity:node/' . $node->id()],
    ]);

    $menu_link_root = reset($menu_link_root_entities);
    if ($menu_link_root) {
        $menu_links = \Drupal::service('menu.tree_storage')
          ->loadByProperties([
            'parent' => 'menu_link_content:' . $menu_link_root->uuid(),
          ]) ?: [];

        $node_ids = array_map(function ($v) {
          return $v['route_parameters']['node'];
        }, $menu_links);

        foreach ($node_ids as $childId) {
          $child = \Drupal\node\Entity\Node::load($childId);
          if ($child->getType() == 'os2web_page' && ($incPromoted && $child->isPromoted())) {
            $refNode->children[] = (object) [
              'title' => $child->getTitle(),
              'url' => $child->toUrl()->toString()
            ];
          }
        }
    }

    return $refNode;
}


function fds_faxe_theme_preprocess_paragraph(&$variables) {

  $paragraph = $variables['paragraph'];

  if ($paragraph->bundle() === 'os2web_menu_box_paragraph') {

    $showImages = ($paragraph->field_os2web_menu_box_vm->value == 'image');
    $incPromoted = ($paragraph->field_os2web_menu_links_inc_pr_p->value == 1);
    $onlyTaxonomy = ($paragraph->field_only_taxonomy->value == 1);

    $showReferences = null;
    if ($paragraph->hasField('field_show_references')) {
      $showReferences = ($paragraph->field_show_references->value == 1);
    }

    $variables['menubox'] = [];
    $node = \Drupal::routeMatch()->getParameter('node');

    if ($node instanceof \Drupal\node\NodeInterface) {

      $aliasManager = \Drupal::service('path_alias.manager');
      foreach ($paragraph->field_sektion->referencedEntities() as $taxonomy) {

        $refNode = new stdClass();
        $refNode->title = (string) $taxonomy->name->value;
        $refNode->url = $aliasManager->getAliasByPath('/taxonomy/term/' . $taxonomy->id());
        $refNode->image = null;
        $refNode->children = array();

        if ($showImages) {

          if ($taxonomy->hasField('field_primaryicon')
            && $taxonomy->field_primaryicon instanceof EntityReferenceFieldItemListInterface
            && $taxonomy->field_primaryicon->referencedEntities()
          ) {
            $refNode->image = $taxonomy->field_primaryicon->view([
              'label' => 'hidden',
              'type' => 'image',
              'settings' => [
                'image_style' => 'thumbnail'
              ],
            ]);
          }
          elseif ($taxonomy->hasField('field_primaryimage')
            && $taxonomy->field_primaryimage instanceof EntityReferenceFieldItemListInterface
            && $taxonomy->field_primaryimage->referencedEntities()
          ) {
            $refNode->image = $taxonomy->field_primaryimage->view([
              'label' => 'hidden',
              'type' => 'image',
              'settings' => [
                'image_style' => 'thumbnail'
              ],
            ]);
          }
        }

        if ($incPromoted) {
          $child_terms = \Drupal::entityTypeManager()
            ->getStorage('taxonomy_term')
            ->loadTree('os2web_sektion', $taxonomy->id(), 1, FALSE);
          foreach ($child_terms as $child) {
            $refNode->children[] = (object) [
              'title' => $child->name,
              'url' => $aliasManager->getAliasByPath('/taxonomy/term/' . $child->tid)
            ];
          }
        }

        $variables['menubox'][] = $refNode;
      }

      if (!$onlyTaxonomy && $node->hasField('field_link_til_andet_indhold')) {

        $refs = $node->get('field_link_til_andet_indhold');
        foreach ($refs->referencedEntities() as $idx => $ref) {
          $variables['menubox'][] = node2box($ref, $showImages, $incPromoted);;
        }
      }

      if ($showReferences && $node->hasField('field_os2web_page_section')) {
        $sections = $node->get('field_os2web_page_section')->referencedEntities();
        if (count( $sections ) > 0) {
          // there is only one but can be change in future ..
          foreach( $sections AS $section ) {
            $refId = $section->tid->value;
            $storage = \Drupal::entityTypeManager()->getStorage('node');
            $query = $storage->getQuery()->condition('field_os2web_page_section.target_id', $refId);
            $references = $query->execute();
            if (count( $references ) > 0) {
              foreach ($references as $refNodeid) {
                if ($node->id() != $refNodeid) {
                  $refNode = \Drupal\node\Entity\Node::load($refNodeid);
                  $variables['menubox'][] = node2box($refNode, $showImages, $incPromoted);;
                }
              }
            }
          }
        }
      }

    }
  }

}
