{#
/**
 * @file
 * Default theme implementation of a container used to wrap child elements.
 *
 * Used for grouped form items. Can also be used as a theme wrapper for any
 * renderable element, to surround it with a <div> and HTML attributes.
 * See \Drupal\Core\Render\Element\RenderElement for more
 * information on the #theme_wrappers render array property, and
 * \Drupal\Core\Render\Element\container for usage of the container render
 * element.
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - children: The rendered child elements of the container.
 * - has_parent: A flag to indicate that the container has one or more parent
     containers.
 *
 * @see template_preprocess_container()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
  has_parent ? 'js-form-wrapper',
  has_parent ? 'form-wrapper',
  "du-screen-questions-related-pages-container-wrap",
]
%}
<div{{attributes.addClass(classes)}}>
	{{ children }}
	{% set i = 1 %}
	{% for relatedPageCategory in container['#related_pages_categories'] %}
		{% if relatedPageCategory.nodes %}
			<div id="{{ relatedPageCategory.transliteratedName }}" class="du-screen-questions-related-pages-container color-container-{{i}} {{ relatedPageCategory.transliteratedName }}">
				<h2 class="du-screen-questions-related-pages-container-title">
					{{ relatedPageCategory.name }}
				</h2>
				<div>
					{% set k = 1 %}
				
					{% for relatedNode in relatedPageCategory.nodes %}
						<ul class="accordion accordion-multiselectable">
							<li data-teaser-title-wrap class="accordion-inner-wrap">
								<button data-teaser-duplicated-title class="accordion-button" aria-expanded="false" aria-controls="accordion-{{i}}-{{k}}">
									Title
								</button>
								<div id="accordion-{{i}}-{{k}}" aria-hidden="true" class="accordion-content">
									{{ relatedNode }}
								</div>
							</li>
						</ul>
						{% set k = k + 1 %}
					{% endfor %}
				</div>
			</div>
		{% endif %}
		{% set i = i + 1 %}
	{% endfor %}
</div>
<script>
	const teaserTitleWraps = document.querySelectorAll("[data-teaser-title-wrap]")
	teaserTitleWraps.forEach(wrap => {
		const teaserTitle = wrap.querySelector('[data-teaser-title] div h3')
		const teaserdDuplicatedTitle = wrap.querySelector('[data-teaser-duplicated-title')
		teaserdDuplicatedTitle.textContent = teaserTitle.textContent
	})
</script>